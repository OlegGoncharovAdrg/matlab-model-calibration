TrackSignal(curChan,curElemOfBuf,3,4);	

void TBlockNav::TrackSignal(int curChan, int it, int KfFr, int KfTk)
{
	// управление по несущей	
	//int Re = BufCh.bf[it].Re0; 					
	//int Im = BufCh.bf[it].Im0;
	writeToFPGA->writeToChan[curChan].shiftempPhaseFn = ((51*Angle1024(Re,Im))/KfFr) >> 8;

	// управление по тактовой
	int dRe = Rem - Rep; 
	int sRe = Rem + Rep;	
	writeToFPGA->writeToChan[curChan].preciseShiftFt = Angle1024(sRe,4096*dRe) >> KfTk;
}

int Angle1024(int ARe, int AIm)
{
	int Ph;
		
	if  (ARe < 0) { ARe = -ARe; AIm = -AIm; }	//действительная часть отрицательна
	int mRe = abs(ARe); 
	int mIm = abs(AIm);
	 
	if (mRe >= mIm)Ph = TbAn[(mIm*159)/mRe];	//рассчитать фазу
	else Ph = 256 - TbAn[(mRe*159)/mIm];				
	 
	if (ARe > 0){if (AIm >= 0) return Ph; else	return -Ph;}
	 
	if (ARe < 0){if (AIm >= 0) return 512-Ph; else	return -512+Ph;}
	 
	if (ARe == 0){if (AIm > 0)  return 256; if (AIm < 0)  return -256;} 
	 
	return 0;
}

//массив аргументов для расчёта фазы
int const TbAn[160] = {  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
						16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
						32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
						48, 49, 50, 51, 52, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 61,
						62, 63, 64, 65, 66, 67, 68, 68, 69, 70, 71, 72, 73, 73, 74, 75,
						76, 77, 78, 78, 79, 80, 81, 82, 82, 83, 84, 85, 85, 86, 87, 88,
						89, 89, 90, 91, 91, 92, 93, 94, 94, 95, 96, 97, 97, 98, 99, 99,
						100,101,101,102,103,103,104,105,105,106,107,107,108,109,109,110,
						110,111,112,112,113,114,114,115,115,116,116,117,118,118,119,119,
						120,120,121,122,122,123,123,124,124,125,125,126,126,127,127,128};

